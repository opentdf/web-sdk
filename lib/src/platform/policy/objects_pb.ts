// @generated by protoc-gen-es v2.2.5 with parameter "target=ts,import_extension=.js"
// @generated from file policy/objects.proto (package policy, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_buf_validate_validate } from "../buf/validate/validate_pb.js";
import type { Metadata } from "../common/common_pb.js";
import { file_common_common } from "../common/common_pb.js";
import { file_google_protobuf_wrappers } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file policy/objects.proto.
 */
export const file_policy_objects: GenFile = /*@__PURE__*/
  fileDesc("", [file_buf_validate_validate, file_common_common, file_google_protobuf_wrappers]);

/**
 * @generated from message policy.SimpleKasPublicKey
 */
export type SimpleKasPublicKey = Message<"policy.SimpleKasPublicKey"> & {
  /**
   * @generated from field: policy.Algorithm algorithm = 1;
   */
  algorithm: Algorithm;

  /**
   * @generated from field: string kid = 2;
   */
  kid: string;

  /**
   * @generated from field: string pem = 3;
   */
  pem: string;
};

/**
 * Describes the message policy.SimpleKasPublicKey.
 * Use `create(SimpleKasPublicKeySchema)` to create a new message.
 */
export const SimpleKasPublicKeySchema: GenMessage<SimpleKasPublicKey> = /*@__PURE__*/
  messageDesc(file_policy_objects, 0);

/**
 * @generated from message policy.SimpleKasKey
 */
export type SimpleKasKey = Message<"policy.SimpleKasKey"> & {
  /**
   * The URL of the Key Access Server
   *
   * @generated from field: string kas_uri = 1;
   */
  kasUri: string;

  /**
   * The public key of the Key that belongs to the KAS
   *
   * @generated from field: policy.SimpleKasPublicKey public_key = 2;
   */
  publicKey?: SimpleKasPublicKey;

  /**
   * The ID of the Key Access Server
   *
   * @generated from field: string kas_id = 3;
   */
  kasId: string;
};

/**
 * Describes the message policy.SimpleKasKey.
 * Use `create(SimpleKasKeySchema)` to create a new message.
 */
export const SimpleKasKeySchema: GenMessage<SimpleKasKey> = /*@__PURE__*/
  messageDesc(file_policy_objects, 1);

/**
 * @generated from message policy.KeyProviderConfig
 */
export type KeyProviderConfig = Message<"policy.KeyProviderConfig"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: bytes config_json = 3;
   */
  configJson: Uint8Array;

  /**
   * Common metadata
   *
   * @generated from field: common.Metadata metadata = 100;
   */
  metadata?: Metadata;
};

/**
 * Describes the message policy.KeyProviderConfig.
 * Use `create(KeyProviderConfigSchema)` to create a new message.
 */
export const KeyProviderConfigSchema: GenMessage<KeyProviderConfig> = /*@__PURE__*/
  messageDesc(file_policy_objects, 2);

/**
 * @generated from message policy.Namespace
 */
export type Namespace = Message<"policy.Namespace"> & {
  /**
   * generated uuid in database
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * used to partition Attribute Definitions, support by namespace AuthN and
   * enable federation
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string fqn = 3;
   */
  fqn: string;

  /**
   * active by default until explicitly deactivated
   *
   * @generated from field: google.protobuf.BoolValue active = 4;
   */
  active?: boolean;

  /**
   * @generated from field: common.Metadata metadata = 5;
   */
  metadata?: Metadata;

  /**
   * KAS grants for the namespace
   *
   * @generated from field: repeated policy.KeyAccessServer grants = 6;
   */
  grants: KeyAccessServer[];

  /**
   * Keys for the namespace
   *
   * @generated from field: repeated policy.SimpleKasKey kas_keys = 7;
   */
  kasKeys: SimpleKasKey[];
};

/**
 * Describes the message policy.Namespace.
 * Use `create(NamespaceSchema)` to create a new message.
 */
export const NamespaceSchema: GenMessage<Namespace> = /*@__PURE__*/
  messageDesc(file_policy_objects, 3);

/**
 * @generated from message policy.Attribute
 */
export type Attribute = Message<"policy.Attribute"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * namespace of the attribute
   *
   * @generated from field: policy.Namespace namespace = 2;
   */
  namespace?: Namespace;

  /**
   * attribute name
   *
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * attribute rule enum
   *
   * @generated from field: policy.AttributeRuleTypeEnum rule = 4;
   */
  rule: AttributeRuleTypeEnum;

  /**
   * @generated from field: repeated policy.Value values = 5;
   */
  values: Value[];

  /**
   * Deprecated
   *
   * @generated from field: repeated policy.KeyAccessServer grants = 6;
   */
  grants: KeyAccessServer[];

  /**
   * @generated from field: string fqn = 7;
   */
  fqn: string;

  /**
   * active by default until explicitly deactivated
   *
   * @generated from field: google.protobuf.BoolValue active = 8;
   */
  active?: boolean;

  /**
   * Keys associated with the attribute
   *
   * @generated from field: repeated policy.SimpleKasKey kas_keys = 9;
   */
  kasKeys: SimpleKasKey[];

  /**
   * Common metadata
   *
   * @generated from field: common.Metadata metadata = 100;
   */
  metadata?: Metadata;
};

/**
 * Describes the message policy.Attribute.
 * Use `create(AttributeSchema)` to create a new message.
 */
export const AttributeSchema: GenMessage<Attribute> = /*@__PURE__*/
  messageDesc(file_policy_objects, 4);

/**
 * @generated from message policy.Value
 */
export type Value = Message<"policy.Value"> & {
  /**
   * generated uuid in database
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: policy.Attribute attribute = 2;
   */
  attribute?: Attribute;

  /**
   * @generated from field: string value = 3;
   */
  value: string;

  /**
   * Deprecated
   * list of key access servers
   *
   * @generated from field: repeated policy.KeyAccessServer grants = 5;
   */
  grants: KeyAccessServer[];

  /**
   * @generated from field: string fqn = 6;
   */
  fqn: string;

  /**
   * active by default until explicitly deactivated
   *
   * @generated from field: google.protobuf.BoolValue active = 7;
   */
  active?: boolean;

  /**
   * subject mapping
   *
   * @generated from field: repeated policy.SubjectMapping subject_mappings = 8;
   */
  subjectMappings: SubjectMapping[];

  /**
   * @generated from field: repeated policy.SimpleKasKey kas_keys = 9;
   */
  kasKeys: SimpleKasKey[];

  /**
   * @generated from field: repeated policy.ResourceMapping resource_mappings = 10;
   */
  resourceMappings: ResourceMapping[];

  /**
   * Common metadata
   *
   * @generated from field: common.Metadata metadata = 100;
   */
  metadata?: Metadata;
};

/**
 * Describes the message policy.Value.
 * Use `create(ValueSchema)` to create a new message.
 */
export const ValueSchema: GenMessage<Value> = /*@__PURE__*/
  messageDesc(file_policy_objects, 5);

/**
 * An action an entity can take
 *
 * @generated from message policy.Action
 */
export type Action = Message<"policy.Action"> & {
  /**
   * Generated uuid in database
   *
   * @generated from field: string id = 3;
   */
  id: string;

  /**
   * Deprecated
   *
   * @generated from oneof policy.Action.value
   */
  value: {
    /**
     * Deprecated
     *
     * @generated from field: policy.Action.StandardAction standard = 1;
     */
    value: Action_StandardAction;
    case: "standard";
  } | {
    /**
     * Deprecated
     *
     * @generated from field: string custom = 2;
     */
    value: string;
    case: "custom";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from field: string name = 4;
   */
  name: string;

  /**
   * @generated from field: common.Metadata metadata = 100;
   */
  metadata?: Metadata;
};

/**
 * Describes the message policy.Action.
 * Use `create(ActionSchema)` to create a new message.
 */
export const ActionSchema: GenMessage<Action> = /*@__PURE__*/
  messageDesc(file_policy_objects, 6);

/**
 * @generated from enum policy.Action.StandardAction
 */
export enum Action_StandardAction {
  /**
   * @generated from enum value: STANDARD_ACTION_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Deprecated
   * Migrate to 'read' action name
   *
   * @generated from enum value: STANDARD_ACTION_DECRYPT = 1;
   */
  DECRYPT = 1,

  /**
   * Deprecated
   * Migrate to 'create' action name
   *
   * @generated from enum value: STANDARD_ACTION_TRANSMIT = 2;
   */
  TRANSMIT = 2,
}

/**
 * Describes the enum policy.Action.StandardAction.
 */
export const Action_StandardActionSchema: GenEnum<Action_StandardAction> = /*@__PURE__*/
  enumDesc(file_policy_objects, 6, 0);

/**
 *
 * Subject Mapping: A Policy assigning Subject Set(s) to a permitted attribute
 * value + action(s) combination
 *
 * @generated from message policy.SubjectMapping
 */
export type SubjectMapping = Message<"policy.SubjectMapping"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * the Attribute Value mapped to; aka: "The Entity Entitlement Attribute"
   *
   * @generated from field: policy.Value attribute_value = 2;
   */
  attributeValue?: Value;

  /**
   * the reusable SubjectConditionSet mapped to the given Attribute Value
   *
   * @generated from field: policy.SubjectConditionSet subject_condition_set = 3;
   */
  subjectConditionSet?: SubjectConditionSet;

  /**
   * The actions permitted by subjects in this mapping
   *
   * @generated from field: repeated policy.Action actions = 4;
   */
  actions: Action[];

  /**
   * @generated from field: common.Metadata metadata = 100;
   */
  metadata?: Metadata;
};

/**
 * Describes the message policy.SubjectMapping.
 * Use `create(SubjectMappingSchema)` to create a new message.
 */
export const SubjectMappingSchema: GenMessage<SubjectMapping> = /*@__PURE__*/
  messageDesc(file_policy_objects, 7);

/**
 * *
 * A Condition defines a rule of <the value at the flattened 'selector value'
 * location> <operator> <subject external values>
 *
 * @generated from message policy.Condition
 */
export type Condition = Message<"policy.Condition"> & {
  /**
   * a selector for a field value on a flattened Entity Representation (such as
   * from idP/LDAP)
   *
   * @generated from field: string subject_external_selector_value = 1;
   */
  subjectExternalSelectorValue: string;

  /**
   * the evaluation operator of relation
   *
   * @generated from field: policy.SubjectMappingOperatorEnum operator = 2;
   */
  operator: SubjectMappingOperatorEnum;

  /**
   * list of comparison values for the result of applying the
   * subject_external_selector_value on a flattened Entity Representation
   * (Subject), evaluated by the operator
   *
   * @generated from field: repeated string subject_external_values = 3;
   */
  subjectExternalValues: string[];
};

/**
 * Describes the message policy.Condition.
 * Use `create(ConditionSchema)` to create a new message.
 */
export const ConditionSchema: GenMessage<Condition> = /*@__PURE__*/
  messageDesc(file_policy_objects, 8);

/**
 * A collection of Conditions evaluated by the boolean_operator provided
 *
 * @generated from message policy.ConditionGroup
 */
export type ConditionGroup = Message<"policy.ConditionGroup"> & {
  /**
   * @generated from field: repeated policy.Condition conditions = 1;
   */
  conditions: Condition[];

  /**
   * the boolean evaluation type across the conditions
   *
   * @generated from field: policy.ConditionBooleanTypeEnum boolean_operator = 2;
   */
  booleanOperator: ConditionBooleanTypeEnum;
};

/**
 * Describes the message policy.ConditionGroup.
 * Use `create(ConditionGroupSchema)` to create a new message.
 */
export const ConditionGroupSchema: GenMessage<ConditionGroup> = /*@__PURE__*/
  messageDesc(file_policy_objects, 9);

/**
 * A collection of Condition Groups
 *
 * @generated from message policy.SubjectSet
 */
export type SubjectSet = Message<"policy.SubjectSet"> & {
  /**
   * multiple Condition Groups are evaluated with AND logic
   *
   * @generated from field: repeated policy.ConditionGroup condition_groups = 1;
   */
  conditionGroups: ConditionGroup[];
};

/**
 * Describes the message policy.SubjectSet.
 * Use `create(SubjectSetSchema)` to create a new message.
 */
export const SubjectSetSchema: GenMessage<SubjectSet> = /*@__PURE__*/
  messageDesc(file_policy_objects, 10);

/**
 *
 * A container for multiple Subject Sets, each containing Condition Groups, each
 * containing Conditions. Multiple Subject Sets in a SubjectConditionSet are
 * evaluated with AND logic. As each Subject Mapping has only one Attribute
 * Value, the SubjectConditionSet is reusable across multiple Subject Mappings /
 * Attribute Values and is an independent unit.
 *
 * @generated from message policy.SubjectConditionSet
 */
export type SubjectConditionSet = Message<"policy.SubjectConditionSet"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: repeated policy.SubjectSet subject_sets = 3;
   */
  subjectSets: SubjectSet[];

  /**
   * @generated from field: common.Metadata metadata = 100;
   */
  metadata?: Metadata;
};

/**
 * Describes the message policy.SubjectConditionSet.
 * Use `create(SubjectConditionSetSchema)` to create a new message.
 */
export const SubjectConditionSetSchema: GenMessage<SubjectConditionSet> = /*@__PURE__*/
  messageDesc(file_policy_objects, 11);

/**
 *
 *
 * A property of a Subject/Entity as its selector expression -> value result
 * pair. This would mirror external user attributes retrieved from an
 * authoritative source such as an IDP (Identity Provider) or User Store.
 * Examples include such ADFS/LDAP, OKTA, etc. For now, a valid property must
 * contain both a selector expression & a resulting value.
 *
 * The external_selector_value is a specifier to select a value from a flattened
 * external representation of an Entity (such as from idP/LDAP), and the
 * external_value is the value selected by the external_selector_value on that
 * Entity Representation (Subject Context). These mirror the Condition.
 *
 * @generated from message policy.SubjectProperty
 */
export type SubjectProperty = Message<"policy.SubjectProperty"> & {
  /**
   * @generated from field: string external_selector_value = 1;
   */
  externalSelectorValue: string;

  /**
   * @generated from field: string external_value = 2;
   */
  externalValue: string;
};

/**
 * Describes the message policy.SubjectProperty.
 * Use `create(SubjectPropertySchema)` to create a new message.
 */
export const SubjectPropertySchema: GenMessage<SubjectProperty> = /*@__PURE__*/
  messageDesc(file_policy_objects, 12);

/**
 *
 * Resource Mapping Groups are namespaced collections of Resource Mappings
 * associated under a common group name.
 *
 * @generated from message policy.ResourceMappingGroup
 */
export type ResourceMappingGroup = Message<"policy.ResourceMappingGroup"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * the namespace containing the group of resource mappings
   *
   * @generated from field: string namespace_id = 2;
   */
  namespaceId: string;

  /**
   * the common name for the group of resource mappings, which must be unique
   * per namespace
   *
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * Common metadata
   *
   * @generated from field: common.Metadata metadata = 100;
   */
  metadata?: Metadata;
};

/**
 * Describes the message policy.ResourceMappingGroup.
 * Use `create(ResourceMappingGroupSchema)` to create a new message.
 */
export const ResourceMappingGroupSchema: GenMessage<ResourceMappingGroup> = /*@__PURE__*/
  messageDesc(file_policy_objects, 13);

/**
 *
 * Resource Mappings (aka Access Control Resource Encodings aka ACRE) are
 * structures supporting the mapping of Resources and Attribute Values
 *
 * @generated from message policy.ResourceMapping
 */
export type ResourceMapping = Message<"policy.ResourceMapping"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: common.Metadata metadata = 2;
   */
  metadata?: Metadata;

  /**
   * @generated from field: policy.Value attribute_value = 3;
   */
  attributeValue?: Value;

  /**
   * @generated from field: repeated string terms = 4;
   */
  terms: string[];

  /**
   * @generated from field: policy.ResourceMappingGroup group = 5;
   */
  group?: ResourceMappingGroup;
};

/**
 * Describes the message policy.ResourceMapping.
 * Use `create(ResourceMappingSchema)` to create a new message.
 */
export const ResourceMappingSchema: GenMessage<ResourceMapping> = /*@__PURE__*/
  messageDesc(file_policy_objects, 14);

/**
 *
 * Key Access Server Registry
 *
 * @generated from message policy.KeyAccessServer
 */
export type KeyAccessServer = Message<"policy.KeyAccessServer"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Address of a KAS instance
   *
   * @generated from field: string uri = 2;
   */
  uri: string;

  /**
   * Deprecated
   *
   * @generated from field: policy.PublicKey public_key = 3;
   */
  publicKey?: PublicKey;

  /**
   * The source of the KAS: (INTERNAL, EXTERNAL)
   *
   * @generated from field: policy.SourceType source_type = 4;
   */
  sourceType: SourceType;

  /**
   * Kas keys associated with this KAS
   *
   * @generated from field: repeated policy.SimpleKasKey kas_keys = 5;
   */
  kasKeys: SimpleKasKey[];

  /**
   * Optional
   * Unique name of the KAS instance
   *
   * @generated from field: string name = 20;
   */
  name: string;

  /**
   * Common metadata
   *
   * @generated from field: common.Metadata metadata = 100;
   */
  metadata?: Metadata;
};

/**
 * Describes the message policy.KeyAccessServer.
 * Use `create(KeyAccessServerSchema)` to create a new message.
 */
export const KeyAccessServerSchema: GenMessage<KeyAccessServer> = /*@__PURE__*/
  messageDesc(file_policy_objects, 15);

/**
 * @generated from message policy.Key
 */
export type Key = Message<"policy.Key"> & {
  /**
   * the database record ID, not the key ID (`kid`)
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: google.protobuf.BoolValue is_active = 2;
   */
  isActive?: boolean;

  /**
   * @generated from field: google.protobuf.BoolValue was_mapped = 3;
   */
  wasMapped?: boolean;

  /**
   * @generated from field: policy.KasPublicKey public_key = 4;
   */
  publicKey?: KasPublicKey;

  /**
   * @generated from field: policy.KeyAccessServer kas = 5;
   */
  kas?: KeyAccessServer;

  /**
   * Common metadata
   *
   * @generated from field: common.Metadata metadata = 100;
   */
  metadata?: Metadata;
};

/**
 * Describes the message policy.Key.
 * Use `create(KeySchema)` to create a new message.
 */
export const KeySchema: GenMessage<Key> = /*@__PURE__*/
  messageDesc(file_policy_objects, 16);

/**
 * Deprecated
 * A KAS public key and some associated metadata for further identifcation
 *
 * @generated from message policy.KasPublicKey
 */
export type KasPublicKey = Message<"policy.KasPublicKey"> & {
  /**
   * x509 ASN.1 content in PEM envelope, usually
   *
   * @generated from field: string pem = 1;
   */
  pem: string;

  /**
   * A unique string identifier for this key
   *
   * @generated from field: string kid = 2;
   */
  kid: string;

  /**
   * A known algorithm type with any additional parameters encoded.
   * To start, these may be `rsa:2048` for encrypting ZTDF files and
   * `ec:secp256r1` for nanoTDF, but more formats may be added as needed.
   *
   * @generated from field: policy.KasPublicKeyAlgEnum alg = 3;
   */
  alg: KasPublicKeyAlgEnum;
};

/**
 * Describes the message policy.KasPublicKey.
 * Use `create(KasPublicKeySchema)` to create a new message.
 */
export const KasPublicKeySchema: GenMessage<KasPublicKey> = /*@__PURE__*/
  messageDesc(file_policy_objects, 17);

/**
 * Deprecated
 * A list of known KAS public keys
 *
 * @generated from message policy.KasPublicKeySet
 */
export type KasPublicKeySet = Message<"policy.KasPublicKeySet"> & {
  /**
   * @generated from field: repeated policy.KasPublicKey keys = 1;
   */
  keys: KasPublicKey[];
};

/**
 * Describes the message policy.KasPublicKeySet.
 * Use `create(KasPublicKeySetSchema)` to create a new message.
 */
export const KasPublicKeySetSchema: GenMessage<KasPublicKeySet> = /*@__PURE__*/
  messageDesc(file_policy_objects, 18);

/**
 * Deprecated
 *
 * @generated from message policy.PublicKey
 */
export type PublicKey = Message<"policy.PublicKey"> & {
  /**
   * @generated from oneof policy.PublicKey.public_key
   */
  publicKey: {
    /**
     * kas public key url - optional since can also be retrieved via public key
     *
     * @generated from field: string remote = 1;
     */
    value: string;
    case: "remote";
  } | {
    /**
     * public key with additional information. Current preferred version
     *
     * @generated from field: policy.KasPublicKeySet cached = 3;
     */
    value: KasPublicKeySet;
    case: "cached";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message policy.PublicKey.
 * Use `create(PublicKeySchema)` to create a new message.
 */
export const PublicKeySchema: GenMessage<PublicKey> = /*@__PURE__*/
  messageDesc(file_policy_objects, 19);

/**
 * @generated from message policy.RegisteredResource
 */
export type RegisteredResource = Message<"policy.RegisteredResource"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: repeated policy.RegisteredResourceValue values = 3;
   */
  values: RegisteredResourceValue[];

  /**
   * Common metadata
   *
   * @generated from field: common.Metadata metadata = 100;
   */
  metadata?: Metadata;
};

/**
 * Describes the message policy.RegisteredResource.
 * Use `create(RegisteredResourceSchema)` to create a new message.
 */
export const RegisteredResourceSchema: GenMessage<RegisteredResource> = /*@__PURE__*/
  messageDesc(file_policy_objects, 20);

/**
 * @generated from message policy.RegisteredResourceValue
 */
export type RegisteredResourceValue = Message<"policy.RegisteredResourceValue"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string value = 2;
   */
  value: string;

  /**
   * @generated from field: policy.RegisteredResource resource = 3;
   */
  resource?: RegisteredResource;

  /**
   * @generated from field: repeated policy.RegisteredResourceValue.ActionAttributeValue action_attribute_values = 4;
   */
  actionAttributeValues: RegisteredResourceValue_ActionAttributeValue[];

  /**
   * Common metadata
   *
   * @generated from field: common.Metadata metadata = 100;
   */
  metadata?: Metadata;
};

/**
 * Describes the message policy.RegisteredResourceValue.
 * Use `create(RegisteredResourceValueSchema)` to create a new message.
 */
export const RegisteredResourceValueSchema: GenMessage<RegisteredResourceValue> = /*@__PURE__*/
  messageDesc(file_policy_objects, 21);

/**
 * @generated from message policy.RegisteredResourceValue.ActionAttributeValue
 */
export type RegisteredResourceValue_ActionAttributeValue = Message<"policy.RegisteredResourceValue.ActionAttributeValue"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: policy.Action action = 2;
   */
  action?: Action;

  /**
   * @generated from field: policy.Value attribute_value = 3;
   */
  attributeValue?: Value;

  /**
   * Common metadata
   *
   * @generated from field: common.Metadata metadata = 100;
   */
  metadata?: Metadata;
};

/**
 * Describes the message policy.RegisteredResourceValue.ActionAttributeValue.
 * Use `create(RegisteredResourceValue_ActionAttributeValueSchema)` to create a new message.
 */
export const RegisteredResourceValue_ActionAttributeValueSchema: GenMessage<RegisteredResourceValue_ActionAttributeValue> = /*@__PURE__*/
  messageDesc(file_policy_objects, 21, 0);

/**
 * @generated from message policy.KasKey
 */
export type KasKey = Message<"policy.KasKey"> & {
  /**
   * @generated from field: string kas_id = 1;
   */
  kasId: string;

  /**
   * @generated from field: policy.AsymmetricKey key = 2;
   */
  key?: AsymmetricKey;

  /**
   * @generated from field: string kas_uri = 3;
   */
  kasUri: string;
};

/**
 * Describes the message policy.KasKey.
 * Use `create(KasKeySchema)` to create a new message.
 */
export const KasKeySchema: GenMessage<KasKey> = /*@__PURE__*/
  messageDesc(file_policy_objects, 22);

/**
 * @generated from message policy.PublicKeyCtx
 */
export type PublicKeyCtx = Message<"policy.PublicKeyCtx"> & {
  /**
   * Required
   *
   * Base64 encoded public key in PEM format
   *
   * @generated from field: string pem = 1;
   */
  pem: string;
};

/**
 * Describes the message policy.PublicKeyCtx.
 * Use `create(PublicKeyCtxSchema)` to create a new message.
 */
export const PublicKeyCtxSchema: GenMessage<PublicKeyCtx> = /*@__PURE__*/
  messageDesc(file_policy_objects, 23);

/**
 * @generated from message policy.PrivateKeyCtx
 */
export type PrivateKeyCtx = Message<"policy.PrivateKeyCtx"> & {
  /**
   * Required
   *
   * Key ID for the symmetric key wrapping this key.
   *
   * @generated from field: string key_id = 1;
   */
  keyId: string;

  /**
   * Optional
   *
   * Base64 encoded wrapped key. Conditionally required if key_mode is LOCAL. Should not be present if key_mode is REMOTE.
   *
   * @generated from field: string wrapped_key = 2;
   */
  wrappedKey: string;
};

/**
 * Describes the message policy.PrivateKeyCtx.
 * Use `create(PrivateKeyCtxSchema)` to create a new message.
 */
export const PrivateKeyCtxSchema: GenMessage<PrivateKeyCtx> = /*@__PURE__*/
  messageDesc(file_policy_objects, 24);

/**
 * @generated from message policy.AsymmetricKey
 */
export type AsymmetricKey = Message<"policy.AsymmetricKey"> & {
  /**
   * Required
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Required
   *
   * @generated from field: string key_id = 2;
   */
  keyId: string;

  /**
   * Required
   *
   * @generated from field: policy.Algorithm key_algorithm = 3;
   */
  keyAlgorithm: Algorithm;

  /**
   * Required
   *
   * @generated from field: policy.KeyStatus key_status = 4;
   */
  keyStatus: KeyStatus;

  /**
   * Required
   *
   * Specifies how the key is managed (local or remote)
   *
   * @generated from field: policy.KeyMode key_mode = 5;
   */
  keyMode: KeyMode;

  /**
   * Required
   *
   * Specific structure based on key provider implementation
   *
   * @generated from field: policy.PublicKeyCtx public_key_ctx = 6;
   */
  publicKeyCtx?: PublicKeyCtx;

  /**
   * Optional
   *
   * Specific structure based on key provider implementation
   *
   * @generated from field: policy.PrivateKeyCtx private_key_ctx = 7;
   */
  privateKeyCtx?: PrivateKeyCtx;

  /**
   * Optional
   *
   * Configuration for the key provider
   *
   * @generated from field: policy.KeyProviderConfig provider_config = 8;
   */
  providerConfig?: KeyProviderConfig;

  /**
   * Common metadata fields
   *
   * @generated from field: common.Metadata metadata = 100;
   */
  metadata?: Metadata;
};

/**
 * Describes the message policy.AsymmetricKey.
 * Use `create(AsymmetricKeySchema)` to create a new message.
 */
export const AsymmetricKeySchema: GenMessage<AsymmetricKey> = /*@__PURE__*/
  messageDesc(file_policy_objects, 25);

/**
 * @generated from message policy.SymmetricKey
 */
export type SymmetricKey = Message<"policy.SymmetricKey"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string key_id = 2;
   */
  keyId: string;

  /**
   * @generated from field: policy.KeyStatus key_status = 3;
   */
  keyStatus: KeyStatus;

  /**
   * Specifies how the key is managed (local or remote)
   *
   * @generated from field: policy.KeyMode key_mode = 4;
   */
  keyMode: KeyMode;

  /**
   * Specific structure based on key provider implementation
   *
   * @generated from field: bytes key_ctx = 5;
   */
  keyCtx: Uint8Array;

  /**
   * Configuration for the key provider
   *
   * @generated from field: policy.KeyProviderConfig provider_config = 6;
   */
  providerConfig?: KeyProviderConfig;

  /**
   * Common metadata fields
   *
   * @generated from field: common.Metadata metadata = 100;
   */
  metadata?: Metadata;
};

/**
 * Describes the message policy.SymmetricKey.
 * Use `create(SymmetricKeySchema)` to create a new message.
 */
export const SymmetricKeySchema: GenMessage<SymmetricKey> = /*@__PURE__*/
  messageDesc(file_policy_objects, 26);

/**
 * @generated from enum policy.AttributeRuleTypeEnum
 */
export enum AttributeRuleTypeEnum {
  /**
   * @generated from enum value: ATTRIBUTE_RULE_TYPE_ENUM_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: ATTRIBUTE_RULE_TYPE_ENUM_ALL_OF = 1;
   */
  ALL_OF = 1,

  /**
   * @generated from enum value: ATTRIBUTE_RULE_TYPE_ENUM_ANY_OF = 2;
   */
  ANY_OF = 2,

  /**
   * @generated from enum value: ATTRIBUTE_RULE_TYPE_ENUM_HIERARCHY = 3;
   */
  HIERARCHY = 3,
}

/**
 * Describes the enum policy.AttributeRuleTypeEnum.
 */
export const AttributeRuleTypeEnumSchema: GenEnum<AttributeRuleTypeEnum> = /*@__PURE__*/
  enumDesc(file_policy_objects, 0);

/**
 * @generated from enum policy.SubjectMappingOperatorEnum
 */
export enum SubjectMappingOperatorEnum {
  /**
   * @generated from enum value: SUBJECT_MAPPING_OPERATOR_ENUM_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * operator that returns true if a value in a list matches the string
   *
   * @generated from enum value: SUBJECT_MAPPING_OPERATOR_ENUM_IN = 1;
   */
  IN = 1,

  /**
   * operator that returns true if a value is not in a list that is matched by
   * string
   *
   * @generated from enum value: SUBJECT_MAPPING_OPERATOR_ENUM_NOT_IN = 2;
   */
  NOT_IN = 2,

  /**
   * operator that returns true if a value in a list contains the substring
   *
   * @generated from enum value: SUBJECT_MAPPING_OPERATOR_ENUM_IN_CONTAINS = 3;
   */
  IN_CONTAINS = 3,
}

/**
 * Describes the enum policy.SubjectMappingOperatorEnum.
 */
export const SubjectMappingOperatorEnumSchema: GenEnum<SubjectMappingOperatorEnum> = /*@__PURE__*/
  enumDesc(file_policy_objects, 1);

/**
 * @generated from enum policy.ConditionBooleanTypeEnum
 */
export enum ConditionBooleanTypeEnum {
  /**
   * @generated from enum value: CONDITION_BOOLEAN_TYPE_ENUM_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: CONDITION_BOOLEAN_TYPE_ENUM_AND = 1;
   */
  AND = 1,

  /**
   * @generated from enum value: CONDITION_BOOLEAN_TYPE_ENUM_OR = 2;
   */
  OR = 2,
}

/**
 * Describes the enum policy.ConditionBooleanTypeEnum.
 */
export const ConditionBooleanTypeEnumSchema: GenEnum<ConditionBooleanTypeEnum> = /*@__PURE__*/
  enumDesc(file_policy_objects, 2);

/**
 * Describes whether this kas is managed by the organization or if they imported
 * the kas information from an external party. These two modes are necessary in order
 * to encrypt a tdf dek with an external parties kas public key.
 *
 * @generated from enum policy.SourceType
 */
export enum SourceType {
  /**
   * @generated from enum value: SOURCE_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * The kas is managed by the organization.
   *
   * @generated from enum value: SOURCE_TYPE_INTERNAL = 1;
   */
  INTERNAL = 1,

  /**
   * The kas is managed by an external party.
   *
   * @generated from enum value: SOURCE_TYPE_EXTERNAL = 2;
   */
  EXTERNAL = 2,
}

/**
 * Describes the enum policy.SourceType.
 */
export const SourceTypeSchema: GenEnum<SourceType> = /*@__PURE__*/
  enumDesc(file_policy_objects, 3);

/**
 * @generated from enum policy.KasPublicKeyAlgEnum
 */
export enum KasPublicKeyAlgEnum {
  /**
   * @generated from enum value: KAS_PUBLIC_KEY_ALG_ENUM_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: KAS_PUBLIC_KEY_ALG_ENUM_RSA_2048 = 1;
   */
  RSA_2048 = 1,

  /**
   * @generated from enum value: KAS_PUBLIC_KEY_ALG_ENUM_RSA_4096 = 2;
   */
  RSA_4096 = 2,

  /**
   * @generated from enum value: KAS_PUBLIC_KEY_ALG_ENUM_EC_SECP256R1 = 5;
   */
  EC_SECP256R1 = 5,

  /**
   * @generated from enum value: KAS_PUBLIC_KEY_ALG_ENUM_EC_SECP384R1 = 6;
   */
  EC_SECP384R1 = 6,

  /**
   * @generated from enum value: KAS_PUBLIC_KEY_ALG_ENUM_EC_SECP521R1 = 7;
   */
  EC_SECP521R1 = 7,
}

/**
 * Describes the enum policy.KasPublicKeyAlgEnum.
 */
export const KasPublicKeyAlgEnumSchema: GenEnum<KasPublicKeyAlgEnum> = /*@__PURE__*/
  enumDesc(file_policy_objects, 4);

/**
 * Supported key algorithms.
 *
 * @generated from enum policy.Algorithm
 */
export enum Algorithm {
  /**
   * @generated from enum value: ALGORITHM_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: ALGORITHM_RSA_2048 = 1;
   */
  RSA_2048 = 1,

  /**
   * @generated from enum value: ALGORITHM_RSA_4096 = 2;
   */
  RSA_4096 = 2,

  /**
   * @generated from enum value: ALGORITHM_EC_P256 = 3;
   */
  EC_P256 = 3,

  /**
   * @generated from enum value: ALGORITHM_EC_P384 = 4;
   */
  EC_P384 = 4,

  /**
   * @generated from enum value: ALGORITHM_EC_P521 = 5;
   */
  EC_P521 = 5,
}

/**
 * Describes the enum policy.Algorithm.
 */
export const AlgorithmSchema: GenEnum<Algorithm> = /*@__PURE__*/
  enumDesc(file_policy_objects, 5);

/**
 * The status of the key
 *
 * @generated from enum policy.KeyStatus
 */
export enum KeyStatus {
  /**
   * @generated from enum value: KEY_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: KEY_STATUS_ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: KEY_STATUS_ROTATED = 2;
   */
  ROTATED = 2,
}

/**
 * Describes the enum policy.KeyStatus.
 */
export const KeyStatusSchema: GenEnum<KeyStatus> = /*@__PURE__*/
  enumDesc(file_policy_objects, 6);

/**
 * Describes the management and operational mode of a cryptographic key.
 *
 * @generated from enum policy.KeyMode
 */
export enum KeyMode {
  /**
   * KEY_MODE_UNSPECIFIED: Default, unspecified key mode. Indicates an uninitialized or error state.
   *
   * @generated from enum value: KEY_MODE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * KEY_MODE_CONFIG_ROOT_KEY: Local key management where the private key is wrapped by a Key Encryption Key (KEK)
   * sourced from local configuration. Unwrapping and all cryptographic operations are performed locally.
   *
   * @generated from enum value: KEY_MODE_CONFIG_ROOT_KEY = 1;
   */
  CONFIG_ROOT_KEY = 1,

  /**
   * KEY_MODE_PROVIDER_ROOT_KEY: Local key management where the private key is wrapped by a Key Encryption Key (KEK)
   * managed by an external provider (e.g., a Hardware Security Module or Cloud KMS).
   * Key unwrapping is delegated to the external provider; subsequent cryptographic operations
   * are performed locally using the unwrapped key.
   *
   * @generated from enum value: KEY_MODE_PROVIDER_ROOT_KEY = 2;
   */
  PROVIDER_ROOT_KEY = 2,

  /**
   * KEY_MODE_REMOTE: Remote key management where the private key is stored in, and all cryptographic
   * operations are performed by, a remote Key Management Service (KMS) or HSM.
   * The private key material never leaves the secure boundary of the remote system.
   *
   * @generated from enum value: KEY_MODE_REMOTE = 3;
   */
  REMOTE = 3,

  /**
   * KEY_MODE_PUBLIC_KEY_ONLY: Public key only mode. Used when only a public key is available or required,
   * typically for wrapping operations (e.g., encrypting a Data Encryption Key (DEK) for an external KAS).
   * The corresponding private key is not managed or accessible by this system.
   *
   * @generated from enum value: KEY_MODE_PUBLIC_KEY_ONLY = 4;
   */
  PUBLIC_KEY_ONLY = 4,
}

/**
 * Describes the enum policy.KeyMode.
 */
export const KeyModeSchema: GenEnum<KeyMode> = /*@__PURE__*/
  enumDesc(file_policy_objects, 7);

