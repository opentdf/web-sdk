// @generated by protoc-gen-es v2.2.5 with parameter "target=ts,import_extension=.js"
// @generated from file policy/subjectmapping/subject_mapping.proto (package policy.subjectmapping, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_buf_validate_validate } from "../../buf/validate/validate_pb.js";
import { file_google_api_annotations } from "../../google/api/annotations_pb.js";
import type { MetadataMutable, MetadataUpdateEnum } from "../../common/common_pb.js";
import { file_common_common } from "../../common/common_pb.js";
import type { Action, SubjectConditionSet, SubjectMapping, SubjectProperty, SubjectSet } from "../objects_pb.js";
import { file_policy_objects } from "../objects_pb.js";
import type { PageRequest, PageResponse } from "../selectors_pb.js";
import { file_policy_selectors } from "../selectors_pb.js";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file policy/subjectmapping/subject_mapping.proto.
 */
export const file_policy_subjectmapping_subject_mapping: GenFile = /*@__PURE__*/
  fileDesc("Citwb2xpY3kvc3ViamVjdG1hcHBpbmcvc3ViamVjdF9tYXBwaW5nLnByb3RvEhVwb2xpY3kuc3ViamVjdG1hcHBpbmciXAobTWF0Y2hTdWJqZWN0TWFwcGluZ3NSZXF1ZXN0Ej0KEnN1YmplY3RfcHJvcGVydGllcxgBIAMoCzIXLnBvbGljeS5TdWJqZWN0UHJvcGVydHlCCLpIBZIBAggBIlAKHE1hdGNoU3ViamVjdE1hcHBpbmdzUmVzcG9uc2USMAoQc3ViamVjdF9tYXBwaW5ncxgBIAMoCzIWLnBvbGljeS5TdWJqZWN0TWFwcGluZyIwChhHZXRTdWJqZWN0TWFwcGluZ1JlcXVlc3QSFAoCaWQYASABKAlCCLpIBXIDsAEBIkwKGUdldFN1YmplY3RNYXBwaW5nUmVzcG9uc2USLwoPc3ViamVjdF9tYXBwaW5nGAEgASgLMhYucG9saWN5LlN1YmplY3RNYXBwaW5nIkUKGkxpc3RTdWJqZWN0TWFwcGluZ3NSZXF1ZXN0EicKCnBhZ2luYXRpb24YCiABKAsyEy5wb2xpY3kuUGFnZVJlcXVlc3QieQobTGlzdFN1YmplY3RNYXBwaW5nc1Jlc3BvbnNlEjAKEHN1YmplY3RfbWFwcGluZ3MYASADKAsyFi5wb2xpY3kuU3ViamVjdE1hcHBpbmcSKAoKcGFnaW5hdGlvbhgKIAEoCzIULnBvbGljeS5QYWdlUmVzcG9uc2Ui0AMKG0NyZWF0ZVN1YmplY3RNYXBwaW5nUmVxdWVzdBIkChJhdHRyaWJ1dGVfdmFsdWVfaWQYASABKAlCCLpIBXIDsAEBEikKB2FjdGlvbnMYAiADKAsyDi5wb2xpY3kuQWN0aW9uQgi6SAWSAQIIARLfAQohZXhpc3Rpbmdfc3ViamVjdF9jb25kaXRpb25fc2V0X2lkGAMgASgJQrMBukivAboBqwEKFG9wdGlvbmFsX3V1aWRfZm9ybWF0EiNPcHRpb25hbCBmaWVsZCBtdXN0IGJlIGEgdmFsaWQgVVVJRBpuc2l6ZSh0aGlzKSA9PSAwIHx8IHRoaXMubWF0Y2hlcygnWzAtOWEtZkEtRl17OH0tWzAtOWEtZkEtRl17NH0tWzAtOWEtZkEtRl17NH0tWzAtOWEtZkEtRl17NH0tWzAtOWEtZkEtRl17MTJ9JykSUwoZbmV3X3N1YmplY3RfY29uZGl0aW9uX3NldBgEIAEoCzIwLnBvbGljeS5zdWJqZWN0bWFwcGluZy5TdWJqZWN0Q29uZGl0aW9uU2V0Q3JlYXRlEikKCG1ldGFkYXRhGGQgASgLMhcuY29tbW9uLk1ldGFkYXRhTXV0YWJsZSJPChxDcmVhdGVTdWJqZWN0TWFwcGluZ1Jlc3BvbnNlEi8KD3N1YmplY3RfbWFwcGluZxgBIAEoCzIWLnBvbGljeS5TdWJqZWN0TWFwcGluZyKWAwobVXBkYXRlU3ViamVjdE1hcHBpbmdSZXF1ZXN0EhQKAmlkGAEgASgJQgi6SAVyA7ABARLWAQoYc3ViamVjdF9jb25kaXRpb25fc2V0X2lkGAIgASgJQrMBukivAboBqwEKFG9wdGlvbmFsX3V1aWRfZm9ybWF0EiNPcHRpb25hbCBmaWVsZCBtdXN0IGJlIGEgdmFsaWQgVVVJRBpuc2l6ZSh0aGlzKSA9PSAwIHx8IHRoaXMubWF0Y2hlcygnWzAtOWEtZkEtRl17OH0tWzAtOWEtZkEtRl17NH0tWzAtOWEtZkEtRl17NH0tWzAtOWEtZkEtRl17NH0tWzAtOWEtZkEtRl17MTJ9JykSHwoHYWN0aW9ucxgDIAMoCzIOLnBvbGljeS5BY3Rpb24SKQoIbWV0YWRhdGEYZCABKAsyFy5jb21tb24uTWV0YWRhdGFNdXRhYmxlEjwKGG1ldGFkYXRhX3VwZGF0ZV9iZWhhdmlvchhlIAEoDjIaLmNvbW1vbi5NZXRhZGF0YVVwZGF0ZUVudW0iTwocVXBkYXRlU3ViamVjdE1hcHBpbmdSZXNwb25zZRIvCg9zdWJqZWN0X21hcHBpbmcYASABKAsyFi5wb2xpY3kuU3ViamVjdE1hcHBpbmciMwobRGVsZXRlU3ViamVjdE1hcHBpbmdSZXF1ZXN0EhQKAmlkGAEgASgJQgi6SAVyA7ABASJPChxEZWxldGVTdWJqZWN0TWFwcGluZ1Jlc3BvbnNlEi8KD3N1YmplY3RfbWFwcGluZxgBIAEoCzIWLnBvbGljeS5TdWJqZWN0TWFwcGluZyI1Ch1HZXRTdWJqZWN0Q29uZGl0aW9uU2V0UmVxdWVzdBIUCgJpZBgBIAEoCUIIukgFcgOwAQEimQEKHkdldFN1YmplY3RDb25kaXRpb25TZXRSZXNwb25zZRI6ChVzdWJqZWN0X2NvbmRpdGlvbl9zZXQYASABKAsyGy5wb2xpY3kuU3ViamVjdENvbmRpdGlvblNldBI7Chthc3NvY2lhdGVkX3N1YmplY3RfbWFwcGluZ3MYAiADKAsyFi5wb2xpY3kuU3ViamVjdE1hcHBpbmciSgofTGlzdFN1YmplY3RDb25kaXRpb25TZXRzUmVxdWVzdBInCgpwYWdpbmF0aW9uGAogASgLMhMucG9saWN5LlBhZ2VSZXF1ZXN0IokBCiBMaXN0U3ViamVjdENvbmRpdGlvblNldHNSZXNwb25zZRI7ChZzdWJqZWN0X2NvbmRpdGlvbl9zZXRzGAEgAygLMhsucG9saWN5LlN1YmplY3RDb25kaXRpb25TZXQSKAoKcGFnaW5hdGlvbhgKIAEoCzIULnBvbGljeS5QYWdlUmVzcG9uc2UiegoZU3ViamVjdENvbmRpdGlvblNldENyZWF0ZRIyCgxzdWJqZWN0X3NldHMYASADKAsyEi5wb2xpY3kuU3ViamVjdFNldEIIukgFkgECCAESKQoIbWV0YWRhdGEYZCABKAsyFy5jb21tb24uTWV0YWRhdGFNdXRhYmxlInMKIENyZWF0ZVN1YmplY3RDb25kaXRpb25TZXRSZXF1ZXN0Ek8KFXN1YmplY3RfY29uZGl0aW9uX3NldBgBIAEoCzIwLnBvbGljeS5zdWJqZWN0bWFwcGluZy5TdWJqZWN0Q29uZGl0aW9uU2V0Q3JlYXRlIl8KIUNyZWF0ZVN1YmplY3RDb25kaXRpb25TZXRSZXNwb25zZRI6ChVzdWJqZWN0X2NvbmRpdGlvbl9zZXQYASABKAsyGy5wb2xpY3kuU3ViamVjdENvbmRpdGlvblNldCLLAQogVXBkYXRlU3ViamVjdENvbmRpdGlvblNldFJlcXVlc3QSFAoCaWQYASABKAlCCLpIBXIDsAEBEigKDHN1YmplY3Rfc2V0cxgCIAMoCzISLnBvbGljeS5TdWJqZWN0U2V0EikKCG1ldGFkYXRhGGQgASgLMhcuY29tbW9uLk1ldGFkYXRhTXV0YWJsZRI8ChhtZXRhZGF0YV91cGRhdGVfYmVoYXZpb3IYZSABKA4yGi5jb21tb24uTWV0YWRhdGFVcGRhdGVFbnVtIl8KIVVwZGF0ZVN1YmplY3RDb25kaXRpb25TZXRSZXNwb25zZRI6ChVzdWJqZWN0X2NvbmRpdGlvbl9zZXQYASABKAsyGy5wb2xpY3kuU3ViamVjdENvbmRpdGlvblNldCI4CiBEZWxldGVTdWJqZWN0Q29uZGl0aW9uU2V0UmVxdWVzdBIUCgJpZBgBIAEoCUIIukgFcgOwAQEiXwohRGVsZXRlU3ViamVjdENvbmRpdGlvblNldFJlc3BvbnNlEjoKFXN1YmplY3RfY29uZGl0aW9uX3NldBgBIAEoCzIbLnBvbGljeS5TdWJqZWN0Q29uZGl0aW9uU2V0Ii4KLERlbGV0ZUFsbFVubWFwcGVkU3ViamVjdENvbmRpdGlvblNldHNSZXF1ZXN0ImwKLURlbGV0ZUFsbFVubWFwcGVkU3ViamVjdENvbmRpdGlvblNldHNSZXNwb25zZRI7ChZzdWJqZWN0X2NvbmRpdGlvbl9zZXRzGAEgAygLMhsucG9saWN5LlN1YmplY3RDb25kaXRpb25TZXQy1hAKFVN1YmplY3RNYXBwaW5nU2VydmljZRK0AQoUTWF0Y2hTdWJqZWN0TWFwcGluZ3MSMi5wb2xpY3kuc3ViamVjdG1hcHBpbmcuTWF0Y2hTdWJqZWN0TWFwcGluZ3NSZXF1ZXN0GjMucG9saWN5LnN1YmplY3RtYXBwaW5nLk1hdGNoU3ViamVjdE1hcHBpbmdzUmVzcG9uc2UiM4LT5JMCLToSc3ViamVjdF9wcm9wZXJ0aWVzIhcvc3ViamVjdC1tYXBwaW5ncy9tYXRjaBKaAQoTTGlzdFN1YmplY3RNYXBwaW5ncxIxLnBvbGljeS5zdWJqZWN0bWFwcGluZy5MaXN0U3ViamVjdE1hcHBpbmdzUmVxdWVzdBoyLnBvbGljeS5zdWJqZWN0bWFwcGluZy5MaXN0U3ViamVjdE1hcHBpbmdzUmVzcG9uc2UiHJACAYLT5JMCExIRL3N1YmplY3QtbWFwcGluZ3MSmQEKEUdldFN1YmplY3RNYXBwaW5nEi8ucG9saWN5LnN1YmplY3RtYXBwaW5nLkdldFN1YmplY3RNYXBwaW5nUmVxdWVzdBowLnBvbGljeS5zdWJqZWN0bWFwcGluZy5HZXRTdWJqZWN0TWFwcGluZ1Jlc3BvbnNlIiGQAgGC0+STAhgSFi9zdWJqZWN0LW1hcHBpbmdzL3tpZH0SnQEKFENyZWF0ZVN1YmplY3RNYXBwaW5nEjIucG9saWN5LnN1YmplY3RtYXBwaW5nLkNyZWF0ZVN1YmplY3RNYXBwaW5nUmVxdWVzdBozLnBvbGljeS5zdWJqZWN0bWFwcGluZy5DcmVhdGVTdWJqZWN0TWFwcGluZ1Jlc3BvbnNlIhyC0+STAhY6ASoiES9zdWJqZWN0LW1hcHBpbmdzEqIBChRVcGRhdGVTdWJqZWN0TWFwcGluZxIyLnBvbGljeS5zdWJqZWN0bWFwcGluZy5VcGRhdGVTdWJqZWN0TWFwcGluZ1JlcXVlc3QaMy5wb2xpY3kuc3ViamVjdG1hcHBpbmcuVXBkYXRlU3ViamVjdE1hcHBpbmdSZXNwb25zZSIhgtPkkwIbOgEqMhYvc3ViamVjdC1tYXBwaW5ncy97aWR9Ep8BChREZWxldGVTdWJqZWN0TWFwcGluZxIyLnBvbGljeS5zdWJqZWN0bWFwcGluZy5EZWxldGVTdWJqZWN0TWFwcGluZ1JlcXVlc3QaMy5wb2xpY3kuc3ViamVjdG1hcHBpbmcuRGVsZXRlU3ViamVjdE1hcHBpbmdSZXNwb25zZSIegtPkkwIYKhYvc3ViamVjdC1tYXBwaW5ncy97aWR9Eq8BChhMaXN0U3ViamVjdENvbmRpdGlvblNldHMSNi5wb2xpY3kuc3ViamVjdG1hcHBpbmcuTGlzdFN1YmplY3RDb25kaXRpb25TZXRzUmVxdWVzdBo3LnBvbGljeS5zdWJqZWN0bWFwcGluZy5MaXN0U3ViamVjdENvbmRpdGlvblNldHNSZXNwb25zZSIikAIBgtPkkwIZEhcvc3ViamVjdC1jb25kaXRpb24tc2V0cxKuAQoWR2V0U3ViamVjdENvbmRpdGlvblNldBI0LnBvbGljeS5zdWJqZWN0bWFwcGluZy5HZXRTdWJqZWN0Q29uZGl0aW9uU2V0UmVxdWVzdBo1LnBvbGljeS5zdWJqZWN0bWFwcGluZy5HZXRTdWJqZWN0Q29uZGl0aW9uU2V0UmVzcG9uc2UiJ5ACAYLT5JMCHhIcL3N1YmplY3QtY29uZGl0aW9uLXNldHMve2lkfRKyAQoZQ3JlYXRlU3ViamVjdENvbmRpdGlvblNldBI3LnBvbGljeS5zdWJqZWN0bWFwcGluZy5DcmVhdGVTdWJqZWN0Q29uZGl0aW9uU2V0UmVxdWVzdBo4LnBvbGljeS5zdWJqZWN0bWFwcGluZy5DcmVhdGVTdWJqZWN0Q29uZGl0aW9uU2V0UmVzcG9uc2UiIoLT5JMCHDoBKiIXL3N1YmplY3QtY29uZGl0aW9uLXNldHMStwEKGVVwZGF0ZVN1YmplY3RDb25kaXRpb25TZXQSNy5wb2xpY3kuc3ViamVjdG1hcHBpbmcuVXBkYXRlU3ViamVjdENvbmRpdGlvblNldFJlcXVlc3QaOC5wb2xpY3kuc3ViamVjdG1hcHBpbmcuVXBkYXRlU3ViamVjdENvbmRpdGlvblNldFJlc3BvbnNlIieC0+STAiE6ASoyHC9zdWJqZWN0LWNvbmRpdGlvbi1zZXRzL3tpZH0StAEKGURlbGV0ZVN1YmplY3RDb25kaXRpb25TZXQSNy5wb2xpY3kuc3ViamVjdG1hcHBpbmcuRGVsZXRlU3ViamVjdENvbmRpdGlvblNldFJlcXVlc3QaOC5wb2xpY3kuc3ViamVjdG1hcHBpbmcuRGVsZXRlU3ViamVjdENvbmRpdGlvblNldFJlc3BvbnNlIiSC0+STAh4qHC9zdWJqZWN0LWNvbmRpdGlvbi1zZXRzL3tpZH0S3AEKJURlbGV0ZUFsbFVubWFwcGVkU3ViamVjdENvbmRpdGlvblNldHMSQy5wb2xpY3kuc3ViamVjdG1hcHBpbmcuRGVsZXRlQWxsVW5tYXBwZWRTdWJqZWN0Q29uZGl0aW9uU2V0c1JlcXVlc3QaRC5wb2xpY3kuc3ViamVjdG1hcHBpbmcuRGVsZXRlQWxsVW5tYXBwZWRTdWJqZWN0Q29uZGl0aW9uU2V0c1Jlc3BvbnNlIiiC0+STAiIqIC9zdWJqZWN0LWNvbmRpdGlvbi1zZXRzL3VubWFwcGVkYgZwcm90bzM", [file_buf_validate_validate, file_google_api_annotations, file_common_common, file_policy_objects, file_policy_selectors]);

/**
 * MatchSubjectMappingsRequest liberally returns a list of SubjectMappings based on the provided SubjectProperties.
 * The SubjectMappings are returned if an external selector field matches.
 *
 * @generated from message policy.subjectmapping.MatchSubjectMappingsRequest
 */
export type MatchSubjectMappingsRequest = Message<"policy.subjectmapping.MatchSubjectMappingsRequest"> & {
  /**
   * @generated from field: repeated policy.SubjectProperty subject_properties = 1;
   */
  subjectProperties: SubjectProperty[];
};

/**
 * Describes the message policy.subjectmapping.MatchSubjectMappingsRequest.
 * Use `create(MatchSubjectMappingsRequestSchema)` to create a new message.
 */
export const MatchSubjectMappingsRequestSchema: GenMessage<MatchSubjectMappingsRequest> = /*@__PURE__*/
  messageDesc(file_policy_subjectmapping_subject_mapping, 0);

/**
 * @generated from message policy.subjectmapping.MatchSubjectMappingsResponse
 */
export type MatchSubjectMappingsResponse = Message<"policy.subjectmapping.MatchSubjectMappingsResponse"> & {
  /**
   * @generated from field: repeated policy.SubjectMapping subject_mappings = 1;
   */
  subjectMappings: SubjectMapping[];
};

/**
 * Describes the message policy.subjectmapping.MatchSubjectMappingsResponse.
 * Use `create(MatchSubjectMappingsResponseSchema)` to create a new message.
 */
export const MatchSubjectMappingsResponseSchema: GenMessage<MatchSubjectMappingsResponse> = /*@__PURE__*/
  messageDesc(file_policy_subjectmapping_subject_mapping, 1);

/**
 * @generated from message policy.subjectmapping.GetSubjectMappingRequest
 */
export type GetSubjectMappingRequest = Message<"policy.subjectmapping.GetSubjectMappingRequest"> & {
  /**
   * Required
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message policy.subjectmapping.GetSubjectMappingRequest.
 * Use `create(GetSubjectMappingRequestSchema)` to create a new message.
 */
export const GetSubjectMappingRequestSchema: GenMessage<GetSubjectMappingRequest> = /*@__PURE__*/
  messageDesc(file_policy_subjectmapping_subject_mapping, 2);

/**
 * @generated from message policy.subjectmapping.GetSubjectMappingResponse
 */
export type GetSubjectMappingResponse = Message<"policy.subjectmapping.GetSubjectMappingResponse"> & {
  /**
   * @generated from field: policy.SubjectMapping subject_mapping = 1;
   */
  subjectMapping?: SubjectMapping;
};

/**
 * Describes the message policy.subjectmapping.GetSubjectMappingResponse.
 * Use `create(GetSubjectMappingResponseSchema)` to create a new message.
 */
export const GetSubjectMappingResponseSchema: GenMessage<GetSubjectMappingResponse> = /*@__PURE__*/
  messageDesc(file_policy_subjectmapping_subject_mapping, 3);

/**
 * @generated from message policy.subjectmapping.ListSubjectMappingsRequest
 */
export type ListSubjectMappingsRequest = Message<"policy.subjectmapping.ListSubjectMappingsRequest"> & {
  /**
   * Optional
   *
   * @generated from field: policy.PageRequest pagination = 10;
   */
  pagination?: PageRequest;
};

/**
 * Describes the message policy.subjectmapping.ListSubjectMappingsRequest.
 * Use `create(ListSubjectMappingsRequestSchema)` to create a new message.
 */
export const ListSubjectMappingsRequestSchema: GenMessage<ListSubjectMappingsRequest> = /*@__PURE__*/
  messageDesc(file_policy_subjectmapping_subject_mapping, 4);

/**
 * @generated from message policy.subjectmapping.ListSubjectMappingsResponse
 */
export type ListSubjectMappingsResponse = Message<"policy.subjectmapping.ListSubjectMappingsResponse"> & {
  /**
   * @generated from field: repeated policy.SubjectMapping subject_mappings = 1;
   */
  subjectMappings: SubjectMapping[];

  /**
   * @generated from field: policy.PageResponse pagination = 10;
   */
  pagination?: PageResponse;
};

/**
 * Describes the message policy.subjectmapping.ListSubjectMappingsResponse.
 * Use `create(ListSubjectMappingsResponseSchema)` to create a new message.
 */
export const ListSubjectMappingsResponseSchema: GenMessage<ListSubjectMappingsResponse> = /*@__PURE__*/
  messageDesc(file_policy_subjectmapping_subject_mapping, 5);

/**
 * @generated from message policy.subjectmapping.CreateSubjectMappingRequest
 */
export type CreateSubjectMappingRequest = Message<"policy.subjectmapping.CreateSubjectMappingRequest"> & {
  /**
   * Required
   * Attribute Value to be mapped to
   *
   * @generated from field: string attribute_value_id = 1;
   */
  attributeValueId: string;

  /**
   * Required
   * The actions permitted by subjects in this mapping
   *
   * @generated from field: repeated policy.Action actions = 2;
   */
  actions: Action[];

  /**
   * Either of the following:
   * Reuse existing SubjectConditionSet (NOTE: prioritized over new_subject_condition_set)
   *
   * @generated from field: string existing_subject_condition_set_id = 3;
   */
  existingSubjectConditionSetId: string;

  /**
   * Create new SubjectConditionSet (NOTE: ignored if existing_subject_condition_set_id is provided)
   *
   * @generated from field: policy.subjectmapping.SubjectConditionSetCreate new_subject_condition_set = 4;
   */
  newSubjectConditionSet?: SubjectConditionSetCreate;

  /**
   * Optional
   *
   * @generated from field: common.MetadataMutable metadata = 100;
   */
  metadata?: MetadataMutable;
};

/**
 * Describes the message policy.subjectmapping.CreateSubjectMappingRequest.
 * Use `create(CreateSubjectMappingRequestSchema)` to create a new message.
 */
export const CreateSubjectMappingRequestSchema: GenMessage<CreateSubjectMappingRequest> = /*@__PURE__*/
  messageDesc(file_policy_subjectmapping_subject_mapping, 6);

/**
 * @generated from message policy.subjectmapping.CreateSubjectMappingResponse
 */
export type CreateSubjectMappingResponse = Message<"policy.subjectmapping.CreateSubjectMappingResponse"> & {
  /**
   * @generated from field: policy.SubjectMapping subject_mapping = 1;
   */
  subjectMapping?: SubjectMapping;
};

/**
 * Describes the message policy.subjectmapping.CreateSubjectMappingResponse.
 * Use `create(CreateSubjectMappingResponseSchema)` to create a new message.
 */
export const CreateSubjectMappingResponseSchema: GenMessage<CreateSubjectMappingResponse> = /*@__PURE__*/
  messageDesc(file_policy_subjectmapping_subject_mapping, 7);

/**
 * @generated from message policy.subjectmapping.UpdateSubjectMappingRequest
 */
export type UpdateSubjectMappingRequest = Message<"policy.subjectmapping.UpdateSubjectMappingRequest"> & {
  /**
   * Required
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Optional
   * Replaces the existing SubjectConditionSet id with a new one
   *
   * @generated from field: string subject_condition_set_id = 2;
   */
  subjectConditionSetId: string;

  /**
   * Optional
   * Replaces entire list of actions permitted by subjects
   *
   * @generated from field: repeated policy.Action actions = 3;
   */
  actions: Action[];

  /**
   * Common metadata
   *
   * @generated from field: common.MetadataMutable metadata = 100;
   */
  metadata?: MetadataMutable;

  /**
   * @generated from field: common.MetadataUpdateEnum metadata_update_behavior = 101;
   */
  metadataUpdateBehavior: MetadataUpdateEnum;
};

/**
 * Describes the message policy.subjectmapping.UpdateSubjectMappingRequest.
 * Use `create(UpdateSubjectMappingRequestSchema)` to create a new message.
 */
export const UpdateSubjectMappingRequestSchema: GenMessage<UpdateSubjectMappingRequest> = /*@__PURE__*/
  messageDesc(file_policy_subjectmapping_subject_mapping, 8);

/**
 * @generated from message policy.subjectmapping.UpdateSubjectMappingResponse
 */
export type UpdateSubjectMappingResponse = Message<"policy.subjectmapping.UpdateSubjectMappingResponse"> & {
  /**
   * Only ID of the updated Subject Mapping provided
   *
   * @generated from field: policy.SubjectMapping subject_mapping = 1;
   */
  subjectMapping?: SubjectMapping;
};

/**
 * Describes the message policy.subjectmapping.UpdateSubjectMappingResponse.
 * Use `create(UpdateSubjectMappingResponseSchema)` to create a new message.
 */
export const UpdateSubjectMappingResponseSchema: GenMessage<UpdateSubjectMappingResponse> = /*@__PURE__*/
  messageDesc(file_policy_subjectmapping_subject_mapping, 9);

/**
 * @generated from message policy.subjectmapping.DeleteSubjectMappingRequest
 */
export type DeleteSubjectMappingRequest = Message<"policy.subjectmapping.DeleteSubjectMappingRequest"> & {
  /**
   * Required
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message policy.subjectmapping.DeleteSubjectMappingRequest.
 * Use `create(DeleteSubjectMappingRequestSchema)` to create a new message.
 */
export const DeleteSubjectMappingRequestSchema: GenMessage<DeleteSubjectMappingRequest> = /*@__PURE__*/
  messageDesc(file_policy_subjectmapping_subject_mapping, 10);

/**
 * @generated from message policy.subjectmapping.DeleteSubjectMappingResponse
 */
export type DeleteSubjectMappingResponse = Message<"policy.subjectmapping.DeleteSubjectMappingResponse"> & {
  /**
   * Only ID of the updated Subject Mapping provided
   *
   * @generated from field: policy.SubjectMapping subject_mapping = 1;
   */
  subjectMapping?: SubjectMapping;
};

/**
 * Describes the message policy.subjectmapping.DeleteSubjectMappingResponse.
 * Use `create(DeleteSubjectMappingResponseSchema)` to create a new message.
 */
export const DeleteSubjectMappingResponseSchema: GenMessage<DeleteSubjectMappingResponse> = /*@__PURE__*/
  messageDesc(file_policy_subjectmapping_subject_mapping, 11);

/**
 * @generated from message policy.subjectmapping.GetSubjectConditionSetRequest
 */
export type GetSubjectConditionSetRequest = Message<"policy.subjectmapping.GetSubjectConditionSetRequest"> & {
  /**
   * Required
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message policy.subjectmapping.GetSubjectConditionSetRequest.
 * Use `create(GetSubjectConditionSetRequestSchema)` to create a new message.
 */
export const GetSubjectConditionSetRequestSchema: GenMessage<GetSubjectConditionSetRequest> = /*@__PURE__*/
  messageDesc(file_policy_subjectmapping_subject_mapping, 12);

/**
 * @generated from message policy.subjectmapping.GetSubjectConditionSetResponse
 */
export type GetSubjectConditionSetResponse = Message<"policy.subjectmapping.GetSubjectConditionSetResponse"> & {
  /**
   * @generated from field: policy.SubjectConditionSet subject_condition_set = 1;
   */
  subjectConditionSet?: SubjectConditionSet;

  /**
   * contextualized Subject Mappings associated with this SubjectConditionSet
   *
   * @generated from field: repeated policy.SubjectMapping associated_subject_mappings = 2;
   */
  associatedSubjectMappings: SubjectMapping[];
};

/**
 * Describes the message policy.subjectmapping.GetSubjectConditionSetResponse.
 * Use `create(GetSubjectConditionSetResponseSchema)` to create a new message.
 */
export const GetSubjectConditionSetResponseSchema: GenMessage<GetSubjectConditionSetResponse> = /*@__PURE__*/
  messageDesc(file_policy_subjectmapping_subject_mapping, 13);

/**
 * @generated from message policy.subjectmapping.ListSubjectConditionSetsRequest
 */
export type ListSubjectConditionSetsRequest = Message<"policy.subjectmapping.ListSubjectConditionSetsRequest"> & {
  /**
   * Optional
   *
   * @generated from field: policy.PageRequest pagination = 10;
   */
  pagination?: PageRequest;
};

/**
 * Describes the message policy.subjectmapping.ListSubjectConditionSetsRequest.
 * Use `create(ListSubjectConditionSetsRequestSchema)` to create a new message.
 */
export const ListSubjectConditionSetsRequestSchema: GenMessage<ListSubjectConditionSetsRequest> = /*@__PURE__*/
  messageDesc(file_policy_subjectmapping_subject_mapping, 14);

/**
 * @generated from message policy.subjectmapping.ListSubjectConditionSetsResponse
 */
export type ListSubjectConditionSetsResponse = Message<"policy.subjectmapping.ListSubjectConditionSetsResponse"> & {
  /**
   * @generated from field: repeated policy.SubjectConditionSet subject_condition_sets = 1;
   */
  subjectConditionSets: SubjectConditionSet[];

  /**
   * @generated from field: policy.PageResponse pagination = 10;
   */
  pagination?: PageResponse;
};

/**
 * Describes the message policy.subjectmapping.ListSubjectConditionSetsResponse.
 * Use `create(ListSubjectConditionSetsResponseSchema)` to create a new message.
 */
export const ListSubjectConditionSetsResponseSchema: GenMessage<ListSubjectConditionSetsResponse> = /*@__PURE__*/
  messageDesc(file_policy_subjectmapping_subject_mapping, 15);

/**
 * @generated from message policy.subjectmapping.SubjectConditionSetCreate
 */
export type SubjectConditionSetCreate = Message<"policy.subjectmapping.SubjectConditionSetCreate"> & {
  /**
   * Required
   *
   * @generated from field: repeated policy.SubjectSet subject_sets = 1;
   */
  subjectSets: SubjectSet[];

  /**
   * Optional
   * Common metadata
   *
   * @generated from field: common.MetadataMutable metadata = 100;
   */
  metadata?: MetadataMutable;
};

/**
 * Describes the message policy.subjectmapping.SubjectConditionSetCreate.
 * Use `create(SubjectConditionSetCreateSchema)` to create a new message.
 */
export const SubjectConditionSetCreateSchema: GenMessage<SubjectConditionSetCreate> = /*@__PURE__*/
  messageDesc(file_policy_subjectmapping_subject_mapping, 16);

/**
 * @generated from message policy.subjectmapping.CreateSubjectConditionSetRequest
 */
export type CreateSubjectConditionSetRequest = Message<"policy.subjectmapping.CreateSubjectConditionSetRequest"> & {
  /**
   * @generated from field: policy.subjectmapping.SubjectConditionSetCreate subject_condition_set = 1;
   */
  subjectConditionSet?: SubjectConditionSetCreate;
};

/**
 * Describes the message policy.subjectmapping.CreateSubjectConditionSetRequest.
 * Use `create(CreateSubjectConditionSetRequestSchema)` to create a new message.
 */
export const CreateSubjectConditionSetRequestSchema: GenMessage<CreateSubjectConditionSetRequest> = /*@__PURE__*/
  messageDesc(file_policy_subjectmapping_subject_mapping, 17);

/**
 * @generated from message policy.subjectmapping.CreateSubjectConditionSetResponse
 */
export type CreateSubjectConditionSetResponse = Message<"policy.subjectmapping.CreateSubjectConditionSetResponse"> & {
  /**
   * @generated from field: policy.SubjectConditionSet subject_condition_set = 1;
   */
  subjectConditionSet?: SubjectConditionSet;
};

/**
 * Describes the message policy.subjectmapping.CreateSubjectConditionSetResponse.
 * Use `create(CreateSubjectConditionSetResponseSchema)` to create a new message.
 */
export const CreateSubjectConditionSetResponseSchema: GenMessage<CreateSubjectConditionSetResponse> = /*@__PURE__*/
  messageDesc(file_policy_subjectmapping_subject_mapping, 18);

/**
 * @generated from message policy.subjectmapping.UpdateSubjectConditionSetRequest
 */
export type UpdateSubjectConditionSetRequest = Message<"policy.subjectmapping.UpdateSubjectConditionSetRequest"> & {
  /**
   * Required
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Optional
   * If provided, replaces entire existing structure of Subject Sets, Condition Groups, & Conditions
   *
   * @generated from field: repeated policy.SubjectSet subject_sets = 2;
   */
  subjectSets: SubjectSet[];

  /**
   * Common metadata
   *
   * @generated from field: common.MetadataMutable metadata = 100;
   */
  metadata?: MetadataMutable;

  /**
   * @generated from field: common.MetadataUpdateEnum metadata_update_behavior = 101;
   */
  metadataUpdateBehavior: MetadataUpdateEnum;
};

/**
 * Describes the message policy.subjectmapping.UpdateSubjectConditionSetRequest.
 * Use `create(UpdateSubjectConditionSetRequestSchema)` to create a new message.
 */
export const UpdateSubjectConditionSetRequestSchema: GenMessage<UpdateSubjectConditionSetRequest> = /*@__PURE__*/
  messageDesc(file_policy_subjectmapping_subject_mapping, 19);

/**
 * @generated from message policy.subjectmapping.UpdateSubjectConditionSetResponse
 */
export type UpdateSubjectConditionSetResponse = Message<"policy.subjectmapping.UpdateSubjectConditionSetResponse"> & {
  /**
   * Only ID of updated Subject Condition Set provided
   *
   * @generated from field: policy.SubjectConditionSet subject_condition_set = 1;
   */
  subjectConditionSet?: SubjectConditionSet;
};

/**
 * Describes the message policy.subjectmapping.UpdateSubjectConditionSetResponse.
 * Use `create(UpdateSubjectConditionSetResponseSchema)` to create a new message.
 */
export const UpdateSubjectConditionSetResponseSchema: GenMessage<UpdateSubjectConditionSetResponse> = /*@__PURE__*/
  messageDesc(file_policy_subjectmapping_subject_mapping, 20);

/**
 * @generated from message policy.subjectmapping.DeleteSubjectConditionSetRequest
 */
export type DeleteSubjectConditionSetRequest = Message<"policy.subjectmapping.DeleteSubjectConditionSetRequest"> & {
  /**
   * Required
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message policy.subjectmapping.DeleteSubjectConditionSetRequest.
 * Use `create(DeleteSubjectConditionSetRequestSchema)` to create a new message.
 */
export const DeleteSubjectConditionSetRequestSchema: GenMessage<DeleteSubjectConditionSetRequest> = /*@__PURE__*/
  messageDesc(file_policy_subjectmapping_subject_mapping, 21);

/**
 * @generated from message policy.subjectmapping.DeleteSubjectConditionSetResponse
 */
export type DeleteSubjectConditionSetResponse = Message<"policy.subjectmapping.DeleteSubjectConditionSetResponse"> & {
  /**
   * Only ID of deleted Subject Condition Set provided
   *
   * @generated from field: policy.SubjectConditionSet subject_condition_set = 1;
   */
  subjectConditionSet?: SubjectConditionSet;
};

/**
 * Describes the message policy.subjectmapping.DeleteSubjectConditionSetResponse.
 * Use `create(DeleteSubjectConditionSetResponseSchema)` to create a new message.
 */
export const DeleteSubjectConditionSetResponseSchema: GenMessage<DeleteSubjectConditionSetResponse> = /*@__PURE__*/
  messageDesc(file_policy_subjectmapping_subject_mapping, 22);

/**
 * Prune any Subject Condition Sets not utilized within a Subject Mapping
 *
 * @generated from message policy.subjectmapping.DeleteAllUnmappedSubjectConditionSetsRequest
 */
export type DeleteAllUnmappedSubjectConditionSetsRequest = Message<"policy.subjectmapping.DeleteAllUnmappedSubjectConditionSetsRequest"> & {
};

/**
 * Describes the message policy.subjectmapping.DeleteAllUnmappedSubjectConditionSetsRequest.
 * Use `create(DeleteAllUnmappedSubjectConditionSetsRequestSchema)` to create a new message.
 */
export const DeleteAllUnmappedSubjectConditionSetsRequestSchema: GenMessage<DeleteAllUnmappedSubjectConditionSetsRequest> = /*@__PURE__*/
  messageDesc(file_policy_subjectmapping_subject_mapping, 23);

/**
 * @generated from message policy.subjectmapping.DeleteAllUnmappedSubjectConditionSetsResponse
 */
export type DeleteAllUnmappedSubjectConditionSetsResponse = Message<"policy.subjectmapping.DeleteAllUnmappedSubjectConditionSetsResponse"> & {
  /**
   * Only IDs of any deleted Subject Condition Set provided
   *
   * @generated from field: repeated policy.SubjectConditionSet subject_condition_sets = 1;
   */
  subjectConditionSets: SubjectConditionSet[];
};

/**
 * Describes the message policy.subjectmapping.DeleteAllUnmappedSubjectConditionSetsResponse.
 * Use `create(DeleteAllUnmappedSubjectConditionSetsResponseSchema)` to create a new message.
 */
export const DeleteAllUnmappedSubjectConditionSetsResponseSchema: GenMessage<DeleteAllUnmappedSubjectConditionSetsResponse> = /*@__PURE__*/
  messageDesc(file_policy_subjectmapping_subject_mapping, 24);

/**
 * @generated from service policy.subjectmapping.SubjectMappingService
 */
export const SubjectMappingService: GenService<{
  /**
   * Find matching Subject Mappings for a given Subject
   *
   * @generated from rpc policy.subjectmapping.SubjectMappingService.MatchSubjectMappings
   */
  matchSubjectMappings: {
    methodKind: "unary";
    input: typeof MatchSubjectMappingsRequestSchema;
    output: typeof MatchSubjectMappingsResponseSchema;
  },
  /**
   * @generated from rpc policy.subjectmapping.SubjectMappingService.ListSubjectMappings
   */
  listSubjectMappings: {
    methodKind: "unary";
    input: typeof ListSubjectMappingsRequestSchema;
    output: typeof ListSubjectMappingsResponseSchema;
  },
  /**
   * @generated from rpc policy.subjectmapping.SubjectMappingService.GetSubjectMapping
   */
  getSubjectMapping: {
    methodKind: "unary";
    input: typeof GetSubjectMappingRequestSchema;
    output: typeof GetSubjectMappingResponseSchema;
  },
  /**
   * @generated from rpc policy.subjectmapping.SubjectMappingService.CreateSubjectMapping
   */
  createSubjectMapping: {
    methodKind: "unary";
    input: typeof CreateSubjectMappingRequestSchema;
    output: typeof CreateSubjectMappingResponseSchema;
  },
  /**
   * @generated from rpc policy.subjectmapping.SubjectMappingService.UpdateSubjectMapping
   */
  updateSubjectMapping: {
    methodKind: "unary";
    input: typeof UpdateSubjectMappingRequestSchema;
    output: typeof UpdateSubjectMappingResponseSchema;
  },
  /**
   * @generated from rpc policy.subjectmapping.SubjectMappingService.DeleteSubjectMapping
   */
  deleteSubjectMapping: {
    methodKind: "unary";
    input: typeof DeleteSubjectMappingRequestSchema;
    output: typeof DeleteSubjectMappingResponseSchema;
  },
  /**
   * @generated from rpc policy.subjectmapping.SubjectMappingService.ListSubjectConditionSets
   */
  listSubjectConditionSets: {
    methodKind: "unary";
    input: typeof ListSubjectConditionSetsRequestSchema;
    output: typeof ListSubjectConditionSetsResponseSchema;
  },
  /**
   * @generated from rpc policy.subjectmapping.SubjectMappingService.GetSubjectConditionSet
   */
  getSubjectConditionSet: {
    methodKind: "unary";
    input: typeof GetSubjectConditionSetRequestSchema;
    output: typeof GetSubjectConditionSetResponseSchema;
  },
  /**
   * @generated from rpc policy.subjectmapping.SubjectMappingService.CreateSubjectConditionSet
   */
  createSubjectConditionSet: {
    methodKind: "unary";
    input: typeof CreateSubjectConditionSetRequestSchema;
    output: typeof CreateSubjectConditionSetResponseSchema;
  },
  /**
   * @generated from rpc policy.subjectmapping.SubjectMappingService.UpdateSubjectConditionSet
   */
  updateSubjectConditionSet: {
    methodKind: "unary";
    input: typeof UpdateSubjectConditionSetRequestSchema;
    output: typeof UpdateSubjectConditionSetResponseSchema;
  },
  /**
   * @generated from rpc policy.subjectmapping.SubjectMappingService.DeleteSubjectConditionSet
   */
  deleteSubjectConditionSet: {
    methodKind: "unary";
    input: typeof DeleteSubjectConditionSetRequestSchema;
    output: typeof DeleteSubjectConditionSetResponseSchema;
  },
  /**
   * @generated from rpc policy.subjectmapping.SubjectMappingService.DeleteAllUnmappedSubjectConditionSets
   */
  deleteAllUnmappedSubjectConditionSets: {
    methodKind: "unary";
    input: typeof DeleteAllUnmappedSubjectConditionSetsRequestSchema;
    output: typeof DeleteAllUnmappedSubjectConditionSetsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_policy_subjectmapping_subject_mapping, 0);

