// @generated by protoc-gen-es v2.2.5 with parameter "target=ts,import_extension=.js"
// @generated from file policy/keymanagement/key_management.proto (package policy.keymanagement, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_buf_validate_validate } from "../../buf/validate/validate_pb.js";
import type { MetadataMutable, MetadataUpdateEnum } from "../../common/common_pb.js";
import { file_common_common } from "../../common/common_pb.js";
import type { KeyProviderConfig } from "../objects_pb.js";
import { file_policy_objects } from "../objects_pb.js";
import type { PageRequest, PageResponse } from "../selectors_pb.js";
import { file_policy_selectors } from "../selectors_pb.js";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file policy/keymanagement/key_management.proto.
 */
export const file_policy_keymanagement_key_management: GenFile = /*@__PURE__*/
  fileDesc("Cilwb2xpY3kva2V5bWFuYWdlbWVudC9rZXlfbWFuYWdlbWVudC5wcm90bxIUcG9saWN5LmtleW1hbmFnZW1lbnQilAEKG0NyZWF0ZVByb3ZpZGVyQ29uZmlnUmVxdWVzdBIUCgRuYW1lGAEgASgJQga6SAPIAQESGwoLY29uZmlnX2pzb24YAiABKAxCBrpIA8gBARIXCgdtYW5hZ2VyGAMgASgJQga6SAPIAQESKQoIbWV0YWRhdGEYZCABKAsyFy5jb21tb24uTWV0YWRhdGFNdXRhYmxlIlIKHENyZWF0ZVByb3ZpZGVyQ29uZmlnUmVzcG9uc2USMgoPcHJvdmlkZXJfY29uZmlnGAEgASgLMhkucG9saWN5LktleVByb3ZpZGVyQ29uZmlnInkKGEdldFByb3ZpZGVyQ29uZmlnUmVxdWVzdBIWCgJpZBgCIAEoCUIIukgFcgOwAQFIABIXCgRuYW1lGAMgASgJQge6SARyAhABSAASFwoHbWFuYWdlchgEIAEoCUIGukgDyAEAQhMKCmlkZW50aWZpZXISBbpIAggBIk8KGUdldFByb3ZpZGVyQ29uZmlnUmVzcG9uc2USMgoPcHJvdmlkZXJfY29uZmlnGAEgASgLMhkucG9saWN5LktleVByb3ZpZGVyQ29uZmlnIkUKGkxpc3RQcm92aWRlckNvbmZpZ3NSZXF1ZXN0EicKCnBhZ2luYXRpb24YCiABKAsyEy5wb2xpY3kuUGFnZVJlcXVlc3QifAobTGlzdFByb3ZpZGVyQ29uZmlnc1Jlc3BvbnNlEjMKEHByb3ZpZGVyX2NvbmZpZ3MYASADKAsyGS5wb2xpY3kuS2V5UHJvdmlkZXJDb25maWcSKAoKcGFnaW5hdGlvbhgKIAEoCzIULnBvbGljeS5QYWdlUmVzcG9uc2Ui6AEKG1VwZGF0ZVByb3ZpZGVyQ29uZmlnUmVxdWVzdBIUCgJpZBgBIAEoCUIIukgFcgOwAQESFAoEbmFtZRgCIAEoCUIGukgDyAEAEhsKC2NvbmZpZ19qc29uGAMgASgMQga6SAPIAQASFwoHbWFuYWdlchgEIAEoCUIGukgDyAEAEikKCG1ldGFkYXRhGGQgASgLMhcuY29tbW9uLk1ldGFkYXRhTXV0YWJsZRI8ChhtZXRhZGF0YV91cGRhdGVfYmVoYXZpb3IYZSABKA4yGi5jb21tb24uTWV0YWRhdGFVcGRhdGVFbnVtIlIKHFVwZGF0ZVByb3ZpZGVyQ29uZmlnUmVzcG9uc2USMgoPcHJvdmlkZXJfY29uZmlnGAEgASgLMhkucG9saWN5LktleVByb3ZpZGVyQ29uZmlnIjMKG0RlbGV0ZVByb3ZpZGVyQ29uZmlnUmVxdWVzdBIUCgJpZBgBIAEoCUIIukgFcgOwAQEiUgocRGVsZXRlUHJvdmlkZXJDb25maWdSZXNwb25zZRIyCg9wcm92aWRlcl9jb25maWcYASABKAsyGS5wb2xpY3kuS2V5UHJvdmlkZXJDb25maWcyjwUKFEtleU1hbmFnZW1lbnRTZXJ2aWNlEn8KFENyZWF0ZVByb3ZpZGVyQ29uZmlnEjEucG9saWN5LmtleW1hbmFnZW1lbnQuQ3JlYXRlUHJvdmlkZXJDb25maWdSZXF1ZXN0GjIucG9saWN5LmtleW1hbmFnZW1lbnQuQ3JlYXRlUHJvdmlkZXJDb25maWdSZXNwb25zZSIAEnYKEUdldFByb3ZpZGVyQ29uZmlnEi4ucG9saWN5LmtleW1hbmFnZW1lbnQuR2V0UHJvdmlkZXJDb25maWdSZXF1ZXN0Gi8ucG9saWN5LmtleW1hbmFnZW1lbnQuR2V0UHJvdmlkZXJDb25maWdSZXNwb25zZSIAEnwKE0xpc3RQcm92aWRlckNvbmZpZ3MSMC5wb2xpY3kua2V5bWFuYWdlbWVudC5MaXN0UHJvdmlkZXJDb25maWdzUmVxdWVzdBoxLnBvbGljeS5rZXltYW5hZ2VtZW50Lkxpc3RQcm92aWRlckNvbmZpZ3NSZXNwb25zZSIAEn8KFFVwZGF0ZVByb3ZpZGVyQ29uZmlnEjEucG9saWN5LmtleW1hbmFnZW1lbnQuVXBkYXRlUHJvdmlkZXJDb25maWdSZXF1ZXN0GjIucG9saWN5LmtleW1hbmFnZW1lbnQuVXBkYXRlUHJvdmlkZXJDb25maWdSZXNwb25zZSIAEn8KFERlbGV0ZVByb3ZpZGVyQ29uZmlnEjEucG9saWN5LmtleW1hbmFnZW1lbnQuRGVsZXRlUHJvdmlkZXJDb25maWdSZXF1ZXN0GjIucG9saWN5LmtleW1hbmFnZW1lbnQuRGVsZXRlUHJvdmlkZXJDb25maWdSZXNwb25zZSIAYgZwcm90bzM", [file_buf_validate_validate, file_common_common, file_policy_objects, file_policy_selectors]);

/**
 *
 * Provider Configuration Requests and Response Messages
 *
 * @generated from message policy.keymanagement.CreateProviderConfigRequest
 */
export type CreateProviderConfigRequest = Message<"policy.keymanagement.CreateProviderConfigRequest"> & {
  /**
   * Required
   * The name of the key provider. (e.g. "AWS KMS Instance 1", "Google Cloud KMS Instance 2")
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required
   * JSON configuration for the key provider. This is unique to individual key providers.
   *
   * @generated from field: bytes config_json = 2;
   */
  configJson: Uint8Array;

  /**
   * Required
   * The type of key manager (e.g. "aws", "gcp", "azure", "opentdf.io/basic")
   *
   * @generated from field: string manager = 3;
   */
  manager: string;

  /**
   * Common metadata
   *
   * @generated from field: common.MetadataMutable metadata = 100;
   */
  metadata?: MetadataMutable;
};

/**
 * Describes the message policy.keymanagement.CreateProviderConfigRequest.
 * Use `create(CreateProviderConfigRequestSchema)` to create a new message.
 */
export const CreateProviderConfigRequestSchema: GenMessage<CreateProviderConfigRequest> = /*@__PURE__*/
  messageDesc(file_policy_keymanagement_key_management, 0);

/**
 * @generated from message policy.keymanagement.CreateProviderConfigResponse
 */
export type CreateProviderConfigResponse = Message<"policy.keymanagement.CreateProviderConfigResponse"> & {
  /**
   * @generated from field: policy.KeyProviderConfig provider_config = 1;
   */
  providerConfig?: KeyProviderConfig;
};

/**
 * Describes the message policy.keymanagement.CreateProviderConfigResponse.
 * Use `create(CreateProviderConfigResponseSchema)` to create a new message.
 */
export const CreateProviderConfigResponseSchema: GenMessage<CreateProviderConfigResponse> = /*@__PURE__*/
  messageDesc(file_policy_keymanagement_key_management, 1);

/**
 * @generated from message policy.keymanagement.GetProviderConfigRequest
 */
export type GetProviderConfigRequest = Message<"policy.keymanagement.GetProviderConfigRequest"> & {
  /**
   * Required
   *
   * @generated from oneof policy.keymanagement.GetProviderConfigRequest.identifier
   */
  identifier: {
    /**
     * @generated from field: string id = 2;
     */
    value: string;
    case: "id";
  } | {
    /**
     * @generated from field: string name = 3;
     */
    value: string;
    case: "name";
  } | { case: undefined; value?: undefined };

  /**
   * Optional - filter by manager type when searching by name
   *
   * @generated from field: string manager = 4;
   */
  manager: string;
};

/**
 * Describes the message policy.keymanagement.GetProviderConfigRequest.
 * Use `create(GetProviderConfigRequestSchema)` to create a new message.
 */
export const GetProviderConfigRequestSchema: GenMessage<GetProviderConfigRequest> = /*@__PURE__*/
  messageDesc(file_policy_keymanagement_key_management, 2);

/**
 * @generated from message policy.keymanagement.GetProviderConfigResponse
 */
export type GetProviderConfigResponse = Message<"policy.keymanagement.GetProviderConfigResponse"> & {
  /**
   * @generated from field: policy.KeyProviderConfig provider_config = 1;
   */
  providerConfig?: KeyProviderConfig;
};

/**
 * Describes the message policy.keymanagement.GetProviderConfigResponse.
 * Use `create(GetProviderConfigResponseSchema)` to create a new message.
 */
export const GetProviderConfigResponseSchema: GenMessage<GetProviderConfigResponse> = /*@__PURE__*/
  messageDesc(file_policy_keymanagement_key_management, 3);

/**
 * @generated from message policy.keymanagement.ListProviderConfigsRequest
 */
export type ListProviderConfigsRequest = Message<"policy.keymanagement.ListProviderConfigsRequest"> & {
  /**
   * Optional
   *
   * @generated from field: policy.PageRequest pagination = 10;
   */
  pagination?: PageRequest;
};

/**
 * Describes the message policy.keymanagement.ListProviderConfigsRequest.
 * Use `create(ListProviderConfigsRequestSchema)` to create a new message.
 */
export const ListProviderConfigsRequestSchema: GenMessage<ListProviderConfigsRequest> = /*@__PURE__*/
  messageDesc(file_policy_keymanagement_key_management, 4);

/**
 * @generated from message policy.keymanagement.ListProviderConfigsResponse
 */
export type ListProviderConfigsResponse = Message<"policy.keymanagement.ListProviderConfigsResponse"> & {
  /**
   * @generated from field: repeated policy.KeyProviderConfig provider_configs = 1;
   */
  providerConfigs: KeyProviderConfig[];

  /**
   * @generated from field: policy.PageResponse pagination = 10;
   */
  pagination?: PageResponse;
};

/**
 * Describes the message policy.keymanagement.ListProviderConfigsResponse.
 * Use `create(ListProviderConfigsResponseSchema)` to create a new message.
 */
export const ListProviderConfigsResponseSchema: GenMessage<ListProviderConfigsResponse> = /*@__PURE__*/
  messageDesc(file_policy_keymanagement_key_management, 5);

/**
 * @generated from message policy.keymanagement.UpdateProviderConfigRequest
 */
export type UpdateProviderConfigRequest = Message<"policy.keymanagement.UpdateProviderConfigRequest"> & {
  /**
   * Required
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Optional
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * Optional
   *
   * @generated from field: bytes config_json = 3;
   */
  configJson: Uint8Array;

  /**
   * Optional
   *
   * @generated from field: string manager = 4;
   */
  manager: string;

  /**
   * Optional
   * Common metadata
   *
   * @generated from field: common.MetadataMutable metadata = 100;
   */
  metadata?: MetadataMutable;

  /**
   * @generated from field: common.MetadataUpdateEnum metadata_update_behavior = 101;
   */
  metadataUpdateBehavior: MetadataUpdateEnum;
};

/**
 * Describes the message policy.keymanagement.UpdateProviderConfigRequest.
 * Use `create(UpdateProviderConfigRequestSchema)` to create a new message.
 */
export const UpdateProviderConfigRequestSchema: GenMessage<UpdateProviderConfigRequest> = /*@__PURE__*/
  messageDesc(file_policy_keymanagement_key_management, 6);

/**
 * @generated from message policy.keymanagement.UpdateProviderConfigResponse
 */
export type UpdateProviderConfigResponse = Message<"policy.keymanagement.UpdateProviderConfigResponse"> & {
  /**
   * @generated from field: policy.KeyProviderConfig provider_config = 1;
   */
  providerConfig?: KeyProviderConfig;
};

/**
 * Describes the message policy.keymanagement.UpdateProviderConfigResponse.
 * Use `create(UpdateProviderConfigResponseSchema)` to create a new message.
 */
export const UpdateProviderConfigResponseSchema: GenMessage<UpdateProviderConfigResponse> = /*@__PURE__*/
  messageDesc(file_policy_keymanagement_key_management, 7);

/**
 * In order to delete a provider configuration you must first delete all keys associated with the provider.
 *
 * @generated from message policy.keymanagement.DeleteProviderConfigRequest
 */
export type DeleteProviderConfigRequest = Message<"policy.keymanagement.DeleteProviderConfigRequest"> & {
  /**
   * Required
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message policy.keymanagement.DeleteProviderConfigRequest.
 * Use `create(DeleteProviderConfigRequestSchema)` to create a new message.
 */
export const DeleteProviderConfigRequestSchema: GenMessage<DeleteProviderConfigRequest> = /*@__PURE__*/
  messageDesc(file_policy_keymanagement_key_management, 8);

/**
 * @generated from message policy.keymanagement.DeleteProviderConfigResponse
 */
export type DeleteProviderConfigResponse = Message<"policy.keymanagement.DeleteProviderConfigResponse"> & {
  /**
   * @generated from field: policy.KeyProviderConfig provider_config = 1;
   */
  providerConfig?: KeyProviderConfig;
};

/**
 * Describes the message policy.keymanagement.DeleteProviderConfigResponse.
 * Use `create(DeleteProviderConfigResponseSchema)` to create a new message.
 */
export const DeleteProviderConfigResponseSchema: GenMessage<DeleteProviderConfigResponse> = /*@__PURE__*/
  messageDesc(file_policy_keymanagement_key_management, 9);

/**
 * @generated from service policy.keymanagement.KeyManagementService
 */
export const KeyManagementService: GenService<{
  /**
   * Key Management
   * Provider Management
   *
   * @generated from rpc policy.keymanagement.KeyManagementService.CreateProviderConfig
   */
  createProviderConfig: {
    methodKind: "unary";
    input: typeof CreateProviderConfigRequestSchema;
    output: typeof CreateProviderConfigResponseSchema;
  },
  /**
   * @generated from rpc policy.keymanagement.KeyManagementService.GetProviderConfig
   */
  getProviderConfig: {
    methodKind: "unary";
    input: typeof GetProviderConfigRequestSchema;
    output: typeof GetProviderConfigResponseSchema;
  },
  /**
   * @generated from rpc policy.keymanagement.KeyManagementService.ListProviderConfigs
   */
  listProviderConfigs: {
    methodKind: "unary";
    input: typeof ListProviderConfigsRequestSchema;
    output: typeof ListProviderConfigsResponseSchema;
  },
  /**
   * @generated from rpc policy.keymanagement.KeyManagementService.UpdateProviderConfig
   */
  updateProviderConfig: {
    methodKind: "unary";
    input: typeof UpdateProviderConfigRequestSchema;
    output: typeof UpdateProviderConfigResponseSchema;
  },
  /**
   * @generated from rpc policy.keymanagement.KeyManagementService.DeleteProviderConfig
   */
  deleteProviderConfig: {
    methodKind: "unary";
    input: typeof DeleteProviderConfigRequestSchema;
    output: typeof DeleteProviderConfigResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_policy_keymanagement_key_management, 0);

