// @generated by protoc-gen-es v2.2.5 with parameter "target=ts,import_extension=.js"
// @generated from file entity/entity.proto (package entity, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_buf_validate_validate } from "../buf/validate/validate_pb.js";
import type { Any } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_any } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file entity/entity.proto.
 */
export const file_entity_entity: GenFile = /*@__PURE__*/
  fileDesc("ChNlbnRpdHkvZW50aXR5LnByb3RvEgZlbnRpdHkiMgoFVG9rZW4SFAoMZXBoZW1lcmFsX2lkGAEgASgJEhMKA2p3dBgCIAEoCUIGukgDyAEBIpkCCgZFbnRpdHkSFAoMZXBoZW1lcmFsX2lkGAEgASgJEhcKDWVtYWlsX2FkZHJlc3MYAiABKAlIABITCgl1c2VyX25hbWUYAyABKAlIABImCgZjbGFpbXMYBCABKAsyFC5nb29nbGUucHJvdG9idWYuQW55SAASEwoJY2xpZW50X2lkGAUgASgJSAASKQoIY2F0ZWdvcnkYCyABKA4yFy5lbnRpdHkuRW50aXR5LkNhdGVnb3J5IlQKCENhdGVnb3J5EhgKFENBVEVHT1JZX1VOU1BFQ0lGSUVEEAASFAoQQ0FURUdPUllfU1VCSkVDVBABEhgKFENBVEVHT1JZX0VOVklST05NRU5UEAJCDQoLZW50aXR5X3R5cGUiRQoLRW50aXR5Q2hhaW4SFAoMZXBoZW1lcmFsX2lkGAEgASgJEiAKCGVudGl0aWVzGAIgAygLMg4uZW50aXR5LkVudGl0eWIGcHJvdG8z", [file_buf_validate_validate, file_google_protobuf_any]);

/**
 * @generated from message entity.Token
 */
export type Token = Message<"entity.Token"> & {
  /**
   * ephemeral id for tracking between request and response
   *
   * @generated from field: string ephemeral_id = 1;
   */
  ephemeralId: string;

  /**
   * the token
   *
   * @generated from field: string jwt = 2;
   */
  jwt: string;
};

/**
 * Describes the message entity.Token.
 * Use `create(TokenSchema)` to create a new message.
 */
export const TokenSchema: GenMessage<Token> = /*@__PURE__*/
  messageDesc(file_entity_entity, 0);

/**
 * PE (Person Entity) or NPE (Non-Person Entity)
 *
 * @generated from message entity.Entity
 */
export type Entity = Message<"entity.Entity"> & {
  /**
   * ephemeral id for tracking between request and response
   *
   * @generated from field: string ephemeral_id = 1;
   */
  ephemeralId: string;

  /**
   * Standard entity types supported by the platform, one of which must be set
   *
   * @generated from oneof entity.Entity.entity_type
   */
  entityType: {
    /**
     * @generated from field: string email_address = 2;
     */
    value: string;
    case: "emailAddress";
  } | {
    /**
     * @generated from field: string user_name = 3;
     */
    value: string;
    case: "userName";
  } | {
    /**
     * used by ERS claims mode
     *
     * @generated from field: google.protobuf.Any claims = 4;
     */
    value: Any;
    case: "claims";
  } | {
    /**
     * @generated from field: string client_id = 5;
     */
    value: string;
    case: "clientId";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from field: entity.Entity.Category category = 11;
   */
  category: Entity_Category;
};

/**
 * Describes the message entity.Entity.
 * Use `create(EntitySchema)` to create a new message.
 */
export const EntitySchema: GenMessage<Entity> = /*@__PURE__*/
  messageDesc(file_entity_entity, 1);

/**
 * @generated from enum entity.Entity.Category
 */
export enum Entity_Category {
  /**
   * @generated from enum value: CATEGORY_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: CATEGORY_SUBJECT = 1;
   */
  SUBJECT = 1,

  /**
   * @generated from enum value: CATEGORY_ENVIRONMENT = 2;
   */
  ENVIRONMENT = 2,
}

/**
 * Describes the enum entity.Entity.Category.
 */
export const Entity_CategorySchema: GenEnum<Entity_Category> = /*@__PURE__*/
  enumDesc(file_entity_entity, 1, 0);

/**
 * A set of related PE and NPE
 *
 * @generated from message entity.EntityChain
 */
export type EntityChain = Message<"entity.EntityChain"> & {
  /**
   * ephemeral id for tracking between request and response
   *
   * @generated from field: string ephemeral_id = 1;
   */
  ephemeralId: string;

  /**
   * @generated from field: repeated entity.Entity entities = 2;
   */
  entities: Entity[];
};

/**
 * Describes the message entity.EntityChain.
 * Use `create(EntityChainSchema)` to create a new message.
 */
export const EntityChainSchema: GenMessage<EntityChain> = /*@__PURE__*/
  messageDesc(file_entity_entity, 2);

